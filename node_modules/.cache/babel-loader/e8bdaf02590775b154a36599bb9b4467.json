{"ast":null,"code":"var _jsxFileName = \"/home/konstantin/Projects/final-project/pokedex/src/Components/PokemonDetails/PokemonDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport './PokemonDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PokemonDetails() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n  console.log(id);\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`) // Extract the DATA from the received response\n    .then(res => {\n      setPokemon(res.data);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: !loading ? pokemon && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"id: \", pokemon.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name: \", pokemon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemon.sprites.other['official-artwork'].front_default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PokemonDetails, \"D2EB2KGITeucgta/JEyD9Yd9Qsg=\", false, function () {\n  return [useParams];\n});\n\n_c = PokemonDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonDetails\");","map":{"version":3,"sources":["/home/konstantin/Projects/final-project/pokedex/src/Components/PokemonDetails/PokemonDetails.jsx"],"names":["React","useState","useEffect","axios","useParams","LoadingSpinner","PokemonDetails","id","pokemon","setPokemon","loading","setLoading","console","log","get","then","res","data","name","sprites","other","front_default"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAO,sBAAP;;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAW,GADL,CACU,qCAAoCP,EAAG,EADjD,EAEI;AAFJ,KAGKQ,IAHL,CAGWC,GAAD,IAAS;AACXP,MAAAA,UAAU,CAACO,GAAG,CAACC,IAAL,CAAV;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AASA,sBACI;AAAA,cACK,CAACD,OAAD,GAAWF,OAAO,iBACf;AAAA,8BACI;AAAA,2BAAQA,OAAO,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAUC,OAAO,CAACU,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIV,OAAO,CAACW,OAAR,CAAgBC,KAAhB,CAAsB,kBAAtB,EAA0CC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADH,gBAOG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA7BuBf,c;UACLF,S;;;KADKE,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport './PokemonDetails.css'\n\nexport default function PokemonDetails() {\n    const { id } = useParams();\n    \n    const [pokemon, setPokemon] = useState(null);\n    const [loading, setLoading] = useState(true);\n    console.log(id)\n\n    useEffect(() => {\n        axios\n            .get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n            // Extract the DATA from the received response\n            .then((res) => {\n                setPokemon(res.data);\n                setLoading(false);\n            });\n    }, []);\n    return (\n        <article>\n            {!loading ? pokemon && (\n                <>\n                    <p>id: {pokemon.id}</p>\n                    <p>name: {pokemon.name}</p>\n                    <p>{pokemon.sprites.other['official-artwork'].front_default}</p>\n                </>\n            ) : (\n                <LoadingSpinner />\n            )}\n        </article>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}