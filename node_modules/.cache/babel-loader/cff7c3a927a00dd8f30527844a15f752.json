{"ast":null,"code":"var _jsxFileName = \"/home/konstantin/Projects/final-project/pokedex/src/Containers/PokemonList/PokemonList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport LoadingSpinner from \"../../Components/LoadingSpinner\";\nimport PokemonCard from '../../Components/PokemonCard';\nimport './PokemonList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PokemonList() {\n  _s();\n\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [splitedUrl, setSplitedUrl] = useState(null);\n  useEffect(() => {\n    axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=12\") // Extract the DATA from the received response\n    .then(res => {\n      setPokemon(res.data.results);\n      setSplitedUrl(res.data.results[1].url.split(\"/\"));\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pokemon.map((pokemon, i) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        name: pokemon.name\n      }, pokemon.url.split(\"/\")[2], false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PokemonList, \"oUPy+RrC8sE2pN56VRAALQ6gG0U=\");\n\n_c = PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/home/konstantin/Projects/final-project/pokedex/src/Containers/PokemonList/PokemonList.jsx"],"names":["React","useState","useEffect","axios","LoadingSpinner","PokemonCard","PokemonList","pokemon","setPokemon","loading","setLoading","splitedUrl","setSplitedUrl","get","then","res","data","results","url","split","map","i","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAO,mBAAP;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAU,GADL,CACS,4CADT,EAEI;AAFJ,KAGKC,IAHL,CAGWC,GAAD,IAAS;AACXP,MAAAA,UAAU,CAACO,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAV;AACAL,MAAAA,aAAa,CAACG,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,GAApB,CAAwBC,KAAxB,CAA8B,GAA9B,CAAD,CAAb;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPL;AAQH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAA,cACK,CAACD,OAAD,gBACG;AAAA,gBACKF,OAAO,CAACa,GAAR,CAAY,CAACb,OAAD,EAAUc,CAAV,kBACT,QAAC,WAAD;AAA6C,QAAA,IAAI,EAAEd,OAAO,CAACe;AAA3D,SAAkBf,OAAO,CAACW,GAAR,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL,qBADH,gBAQG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA9BuBb,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport LoadingSpinner from \"../../Components/LoadingSpinner\";\nimport PokemonCard from '../../Components/PokemonCard';\nimport './PokemonList.css';\n\nexport default function PokemonList() {\n    const [pokemon, setPokemon] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [splitedUrl, setSplitedUrl] = useState(null);\n\n    useEffect(() => {\n        axios\n            .get(\"https://pokeapi.co/api/v2/pokemon?limit=12\")\n            // Extract the DATA from the received response\n            .then((res) => {\n                setPokemon(res.data.results);\n                setSplitedUrl(res.data.results[1].url.split(\"/\"))\n                setLoading(false);\n            });\n    }, []);\n\n    return (\n        <section>\n            {!loading ? (\n                <>\n                    {pokemon.map((pokemon, i) => (\n                        <PokemonCard key={pokemon.url.split(\"/\")[2]} name={pokemon.name} />\n                    ))}\n                </>\n\n            ) : (\n                <LoadingSpinner />\n            )}\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}